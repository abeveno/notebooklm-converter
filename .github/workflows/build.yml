name: Build NotebookLM Converter

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Cho phép chạy manual

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: [3.9]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # macOS specific setup
    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        # Xcode command line tools should be pre-installed on GitHub runners
        xcode-select --print-path
    
    # Windows specific setup  
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        # Windows SDK should be available on GitHub runners
        echo "Windows build environment ready"
    
    # Linux specific setup
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgirepository1.0-dev libcairo2-dev libpango1.0-dev libwebkitgtk-3.0-dev libgtk-3-dev gir1.2-webkit-3.0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install -r requirements.txt
    
    - name: Create application icons
      run: |
        cd src/notebooklm_converter/resources
        python create_icon.py
    
    - name: Create Briefcase app
      run: briefcase create
    
    - name: Build Briefcase app
      run: briefcase build
    
    - name: Package Briefcase app
      run: briefcase package
    
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: dist/*.msi
    
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-installer
        path: dist/*.dmg
    
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-installer
        path: dist/*.AppImage

  # Job để tạo release khi có tag
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-installer/*
          macos-installer/*
          linux-installer/*
        body: |
          ## NotebookLM Converter ${{ github.ref_name }}
          
          ### Downloads
          - **Windows**: Download the `.msi` file
          - **macOS**: Download the `.dmg` file  
          - **Linux**: Download the `.AppImage` file
          
          ### Features
          - Convert ebooks to NotebookLM-optimized formats
          - Support for EPUB, MOBI, AZW/KFX, iBooks, CBR/CBZ
          - Output to PDF, TXT, Markdown
          - Batch file processing
          - Cross-platform compatibility
          
          ### Installation
          - **Windows**: Double-click the MSI file to install
          - **macOS**: Mount the DMG and drag to Applications folder
          - **Linux**: Make the AppImage executable and run
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
