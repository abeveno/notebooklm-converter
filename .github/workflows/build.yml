name: Build NotebookLM Converter

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Cho phép chạy manual

jobs:
  build:
    strategy:
      fail-fast: false  # Không dừng các job khác khi một job fail
      matrix:
        os: [windows-latest, macos-latest]  # Tạm thời remove ubuntu-latest
        python-version: [3.9]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # macOS specific setup
    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        # Xcode command line tools should be pre-installed on GitHub runners
        xcode-select --print-path
    
    # Windows specific setup  
    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: |
        # Windows SDK should be available on GitHub runners
        echo "Windows build environment ready"
    
    # Linux specific setup
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgirepository1.0-dev \
          libcairo2-dev \
          libpango1.0-dev \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          gir1.2-webkit2-4.0 \
          python3-gi \
          python3-gi-cairo \
          gir1.2-gtk-3.0
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        
    - name: Debug environment
      run: |
        echo "OS: ${{ matrix.os }}"
        echo "Python version: ${{ matrix.python-version }}"
        python --version
        pip --version
        pwd
        
    - name: Debug environment - Unix
      if: matrix.os != 'windows-latest'
      run: ls -la
        
    - name: Debug environment - Windows
      if: matrix.os == 'windows-latest'
      run: Get-ChildItem
        
    - name: Install project dependencies
      run: |
        pip install ebooklib==0.18
        pip install beautifulsoup4==4.12.2
        pip install python-docx==0.8.11
        pip install pillow==10.0.1
        pip install requests==2.31.0
        pip install reportlab==4.0.4
        
    - name: Verify tkinter availability
      run: python -c "import tkinter; print('tkinter available')"
      continue-on-error: true
    
    - name: Create application icons
      run: |
        cd src/notebooklm_converter/resources
        python create_icon.py
      continue-on-error: true  # Không fail nếu icon creation lỗi
    
    - name: Create Briefcase app
      run: briefcase create
      continue-on-error: false
    
    - name: Build Briefcase app  
      run: briefcase build
      continue-on-error: false
    
    - name: Package Briefcase app - macOS
      if: matrix.os == 'macos-latest'
      run: briefcase package --adhoc-sign
      continue-on-error: false
      
    - name: Package Briefcase app - Windows/Linux
      if: matrix.os != 'macos-latest'
      run: briefcase package
      continue-on-error: false
    
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: dist/*.msi
    
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-installer
        path: dist/*.dmg
    
    # Linux artifacts upload - disabled for now
    # - name: Upload Linux artifacts
    #   if: matrix.os == 'ubuntu-latest'
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: linux-installer
    #     path: dist/*.AppImage

  # Job để tạo release khi có tag
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-installer/*
          macos-installer/*
        body: |
          ## NotebookLM Converter ${{ github.ref_name }}
          
          ### Downloads
          - **Windows**: Download the `.msi` file
          - **macOS**: Download the `.dmg` file  
          
          ### Features
          - Convert ebooks to NotebookLM-optimized formats
          - Support for EPUB, MOBI, AZW/KFX, iBooks, CBR/CBZ
          - Output to PDF, TXT, Markdown
          - Batch file processing
          - Cross-platform compatibility
          
          ### Installation
          - **Windows**: Double-click the MSI file to install
          - **macOS**: Mount the DMG and drag to Applications folder
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
